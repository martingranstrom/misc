import numpy as np
import pandas as pd
from scipy import stats
import xlrd

"""Millennial money"""

data_file = 'Data.xlsx'

y1 = pd.read_excel(data_file)

# Droppa första info-raden
y1 = y1[1:]

def fixValueData(values):

    maxVal = np.max(values)
    it = 1
    for value in values:
        if np.isnan(value):
            values[it] = maxVal * 2
        if value <= 0:
            values[it] = maxVal + np.abs(value)
        it = it + 1

    return values

def fixData(values):

    it = 1
    for value in values:
        if np.isnan(value):
            values[it] = 0
        it = it + 1

    return values

def fixROICData(values):

    minVal = np.min(values)
    it = 1
    for value in values:
        if np.isnan(value):
            if minVal < 0:
                values[it] = minVal * 2
            else:
                values[it] = 0
        it = it + 1

    return values

ROIC = fixROICData(y1['ROIC']).rank(ascending=False)
EVFCF = fixValueData(y1['EV/FCF']).rank(ascending=True)

y1['StYield'] = y1['Kassaf. Fin.']/y1['Börsvärde']
StYield = y1['StYield'].rank(ascending=True)

y1['QEarn'] = (y1['Vinst'] - fixData(y1['OP kassaf.']))/y1['Börsvärde']
QEarn = y1['QEarn'].rank(ascending=True)

momentum = y1['Kursutveck.'].rank(ascending=False)

sammansattRank = ROIC + EVFCF + StYield + QEarn + momentum

y1['valueRank'] = sammansattRank

y1 = y1.sort_values(['valueRank'], ascending=True)

print(y1[:30].to_string(), '\n')

print('Median:\n')
print('EV/FCF: ', int(np.median(fixValueData(y1['EV/FCF']))))
print('ROIC: ', int(np.median(fixROICData(y1['ROIC'])) * 100))
print('6m momentum: ', int(np.median(y1['Kursutveck.']) * 100), '%')
print('Quality earnings: ', np.median(y1['QEarn']))
print('Stakeholder yield: ', np.median(y1['StYield']), '\n')

print('Percentiles:\n')
for i in range(10):

    ev_fcf_percentile = round(stats.percentileofscore(fixValueData(y1['EV/FCF']), y1['EV/FCF'].values[i]) + .5)
    roic_percentile = round(100 - stats.percentileofscore(fixROICData(y1['ROIC']), y1['ROIC'].values[i]) + .5)
    kurs_percentile = round(100 - stats.percentileofscore(y1['Kursutveck.'], y1['Kursutveck.'].values[i]) + .5)
    qearn_percentile = round(stats.percentileofscore(y1['QEarn'], y1['QEarn'].values[i]) + .5)
    sty_percentile = round(stats.percentileofscore(y1['StYield'], y1['StYield'].values[i]) + .5)
    avg = (ev_fcf_percentile + roic_percentile + kurs_percentile + qearn_percentile + sty_percentile)/5

    print(y1['Bolagsnamn'].values[i])
    print(ev_fcf_percentile, roic_percentile, kurs_percentile, qearn_percentile, sty_percentile, avg, '\n')
